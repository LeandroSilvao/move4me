{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"D:\\\\Desktop\\\\Solve\\\\TREINAMENTOS\\\\NLW\\\\#4\\\\moveit-next\\\\src\\\\contexts\\\\CountdownContexts.tsx\",\n    _s = $RefreshSig$();\n\nimport { createContext, useContext, useEffect, useState } from \"react\";\nimport { ChallengesContext } from \"./ChallengeContexts\";\nexport var CountdownContext = /*#__PURE__*/createContext({});\nvar countdownTimeout;\nexport function CountdownProvider(_ref) {\n  _s();\n\n  var children = _ref.children;\n\n  var _useState = useState(0.5 * 60),\n      time = _useState[0],\n      setTime = _useState[1];\n\n  var _useState2 = useState(false),\n      isActive = _useState2[0],\n      setIsActive = _useState2[1];\n\n  var _useState3 = useState(false),\n      hasFinished = _useState3[0],\n      setHasFinished = _useState3[1];\n\n  var minutes = Math.floor(time / 60);\n  var seconds = time % 60;\n\n  var _useContext = useContext(ChallengesContext),\n      startNewChallenge = _useContext.startNewChallenge;\n\n  useEffect(function () {\n    if (isActive && time > 0) {\n      countdownTimeout = setTimeout(function () {\n        setTime(time - 1);\n      }, 1000);\n    } else if (isActive && time === 0) {\n      setHasFinished(true);\n      setIsActive(false);\n      startNewChallenge();\n    }\n  }, [isActive, time]);\n\n  function startCountdown() {\n    setIsActive(true);\n  }\n\n  function resetCountdown() {\n    clearTimeout(countdownTimeout);\n    setIsActive(false);\n    setTime(0.5 * 60);\n    setHasFinished(false);\n  }\n\n  return /*#__PURE__*/_jsxDEV(CountdownContext.Provider, {\n    value: {\n      minutes: minutes,\n      seconds: seconds,\n      startCountdown: startCountdown,\n      resetCountdown: resetCountdown,\n      hasFinished: hasFinished,\n      isActive: isActive\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n}\n\n_s(CountdownProvider, \"sOCPW3qvW2own9fSlzGBbxaNQAM=\");\n\n_c = CountdownProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"CountdownProvider\");","map":{"version":3,"sources":["D:/Desktop/Solve/TREINAMENTOS/NLW/#4/moveit-next/src/contexts/CountdownContexts.tsx"],"names":["createContext","useContext","useEffect","useState","ChallengesContext","CountdownContext","countdownTimeout","CountdownProvider","children","time","setTime","isActive","setIsActive","hasFinished","setHasFinished","minutes","Math","floor","seconds","startNewChallenge","setTimeout","startCountdown","resetCountdown","clearTimeout"],"mappings":";;;;;AAAA,SACEA,aADF,EAGEC,UAHF,EAIEC,SAJF,EAKEC,QALF,QAMO,OANP;AAOA,SAASC,iBAAT,QAAkC,qBAAlC;AAeA,OAAO,IAAMC,gBAAgB,gBAAGL,aAAa,CAAC,EAAD,CAAtC;AAEP,IAAIM,gBAAJ;AAEA,OAAO,SAASC,iBAAT,OAAiE;AAAA;;AAAA,MAApCC,QAAoC,QAApCA,QAAoC;;AAAA,kBAC9CL,QAAQ,CAAC,MAAM,EAAP,CADsC;AAAA,MAC/DM,IAD+D;AAAA,MACzDC,OADyD;;AAAA,mBAEtCP,QAAQ,CAAC,KAAD,CAF8B;AAAA,MAE/DQ,QAF+D;AAAA,MAErDC,WAFqD;;AAAA,mBAGhCT,QAAQ,CAAC,KAAD,CAHwB;AAAA,MAG/DU,WAH+D;AAAA,MAGlDC,cAHkD;;AAKtE,MAAMC,OAAO,GAAGC,IAAI,CAACC,KAAL,CAAWR,IAAI,GAAG,EAAlB,CAAhB;AACA,MAAMS,OAAO,GAAGT,IAAI,GAAG,EAAvB;;AANsE,oBAQxCR,UAAU,CAACG,iBAAD,CAR8B;AAAA,MAQ9De,iBAR8D,eAQ9DA,iBAR8D;;AAUtEjB,EAAAA,SAAS,CAAC,YAAM;AACd,QAAIS,QAAQ,IAAIF,IAAI,GAAG,CAAvB,EAA0B;AACxBH,MAAAA,gBAAgB,GAAGc,UAAU,CAAC,YAAM;AAClCV,QAAAA,OAAO,CAACD,IAAI,GAAG,CAAR,CAAP;AACD,OAF4B,EAE1B,IAF0B,CAA7B;AAGD,KAJD,MAIO,IAAIE,QAAQ,IAAIF,IAAI,KAAK,CAAzB,EAA4B;AACjCK,MAAAA,cAAc,CAAC,IAAD,CAAd;AACAF,MAAAA,WAAW,CAAC,KAAD,CAAX;AACAO,MAAAA,iBAAiB;AAClB;AACF,GAVQ,EAUN,CAACR,QAAD,EAAWF,IAAX,CAVM,CAAT;;AAYA,WAASY,cAAT,GAA0B;AACxBT,IAAAA,WAAW,CAAC,IAAD,CAAX;AACD;;AACD,WAASU,cAAT,GAA0B;AACxBC,IAAAA,YAAY,CAACjB,gBAAD,CAAZ;AACAM,IAAAA,WAAW,CAAC,KAAD,CAAX;AACAF,IAAAA,OAAO,CAAC,MAAM,EAAP,CAAP;AACAI,IAAAA,cAAc,CAAC,KAAD,CAAd;AACD;;AAED,sBACE,QAAC,gBAAD,CAAkB,QAAlB;AACE,IAAA,KAAK,EAAE;AACLC,MAAAA,OAAO,EAAPA,OADK;AAELG,MAAAA,OAAO,EAAPA,OAFK;AAGLG,MAAAA,cAAc,EAAdA,cAHK;AAILC,MAAAA,cAAc,EAAdA,cAJK;AAKLT,MAAAA,WAAW,EAAXA,WALK;AAMLF,MAAAA,QAAQ,EAARA;AANK,KADT;AAAA,cASGH;AATH;AAAA;AAAA;AAAA;AAAA,UADF;AAaD;;GA7CeD,iB;;KAAAA,iB","sourcesContent":["import {\r\n  createContext,\r\n  ReactNode,\r\n  useContext,\r\n  useEffect,\r\n  useState,\r\n} from \"react\";\r\nimport { ChallengesContext } from \"./ChallengeContexts\";\r\n\r\ninterface CountdownContextData {\r\n  minutes: number;\r\n  seconds: number;\r\n  hasFinished: boolean;\r\n  isActive: boolean;\r\n  startCountdown: () => void;\r\n  resetCountdown: () => void;\r\n}\r\n\r\ninterface CountdownProviderProps {\r\n  children: ReactNode;\r\n}\r\n\r\nexport const CountdownContext = createContext({} as CountdownContextData);\r\n\r\nlet countdownTimeout: NodeJS.Timeout;\r\n\r\nexport function CountdownProvider({ children }: CountdownProviderProps) {\r\n  const [time, setTime] = useState(0.5 * 60);\r\n  const [isActive, setIsActive] = useState(false);\r\n  const [hasFinished, setHasFinished] = useState(false);\r\n\r\n  const minutes = Math.floor(time / 60);\r\n  const seconds = time % 60;\r\n\r\n  const { startNewChallenge } = useContext(ChallengesContext);\r\n\r\n  useEffect(() => {\r\n    if (isActive && time > 0) {\r\n      countdownTimeout = setTimeout(() => {\r\n        setTime(time - 1);\r\n      }, 1000);\r\n    } else if (isActive && time === 0) {\r\n      setHasFinished(true);\r\n      setIsActive(false);\r\n      startNewChallenge();\r\n    }\r\n  }, [isActive, time]);\r\n\r\n  function startCountdown() {\r\n    setIsActive(true);\r\n  }\r\n  function resetCountdown() {\r\n    clearTimeout(countdownTimeout);\r\n    setIsActive(false);\r\n    setTime(0.5 * 60);\r\n    setHasFinished(false)\r\n  }\r\n\r\n  return (\r\n    <CountdownContext.Provider\r\n      value={{\r\n        minutes,\r\n        seconds,\r\n        startCountdown,\r\n        resetCountdown,\r\n        hasFinished,\r\n        isActive,\r\n      }}>\r\n      {children}\r\n    </CountdownContext.Provider>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}