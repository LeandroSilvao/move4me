{"ast":null,"code":"import { jsx as _jsx } from \"react/jsx-runtime\";\nimport { createContext, useState } from \"react\";\nimport { useRouter } from 'next/router';\nimport axios from \"axios\";\nimport Cookies from \"js-cookie\";\nimport config from '../config';\nexport var UserContext = /*#__PURE__*/createContext({});\nexport var UserProvider = function UserProvider(props) {\n  var _useState = useState(\"\"),\n      username = _useState[0],\n      setUsername = _useState[1];\n\n  var _useState2 = useState(\"\"),\n      password = _useState2[0],\n      setPassword = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      fullName = _useState3[0],\n      setFullName = _useState3[1];\n\n  var _useState4 = useState(\"\"),\n      urlProfilePicture = _useState4[0],\n      setUrlProfilePicture = _useState4[1];\n\n  var _useState5 = useState(false),\n      authenticated = _useState5[0],\n      setAuthenticated = _useState5[1];\n\n  var _useState6 = useState(false),\n      googleAuthenticated = _useState6[0],\n      setGoogleAuthenticated = _useState6[1];\n\n  var _useState7 = useState(''),\n      accessToken = _useState7[0],\n      setAccessToken = _useState7[1];\n\n  var router = useRouter();\n\n  function ClearUserInfo() {\n    setUsername('');\n    setPassword('');\n    setFullName('');\n    setAuthenticated(false);\n    setGoogleAuthenticated(false);\n    setAccessToken('');\n    setUrlProfilePicture('');\n    Cookies.set('accessToken', '');\n  }\n\n  function setUser(e) {\n    var username = e.target.value;\n    setUsername(username);\n  }\n\n  function setUserPassword(e) {\n    var password = e.target.value;\n    setPassword(password);\n  }\n\n  function SignIn() {\n    axios.post(\"/api/auth?grant_type=password&username=\".concat(username, \"&password=\").concat(password)).then(function (res) {\n      if (res.data.access_token) {\n        setAccessToken(res.data.access_token);\n        setAuthenticated(true);\n        axios.get(\"\".concat(config.urlGitLabUserInfo).concat(username)).then(function (res) {\n          setFullName(res.data[0].name);\n          var urlProfilePicture = res.data[0].avatar_url.replace('10.10.1.35', '177.84.246.126:9955');\n          setUrlProfilePicture(urlProfilePicture);\n        });\n        router.push('/home');\n      }\n    })[\"catch\"](function (err) {\n      return console.log(err);\n    });\n  }\n\n  function SearchUserDetails(token) {\n    axios.get(\"\".concat(config.urlUserIngoGoogle).concat(token)).then(function (res) {\n      var _res$data = res.data,\n          picture = _res$data.picture,\n          given_name = _res$data.given_name;\n      setUrlProfilePicture(picture);\n      setFullName(given_name);\n      setUsername(res.data.email.split(\"@\")[0]);\n    });\n  }\n\n  function SignInGoogle(_ref) {\n    var accessToken = _ref.accessToken;\n    Cookies.set('accessToken', accessToken);\n    setAccessToken(accessToken);\n    setGoogleAuthenticated(true);\n    SearchUserDetails(accessToken);\n    router.push('/home');\n  }\n\n  function SignOut() {\n    router.push('/');\n    ClearUserInfo();\n  }\n\n  return /*#__PURE__*/_jsx(UserContext.Provider, {\n    value: {\n      username: username,\n      setUser: setUser,\n      password: password,\n      setUserPassword: setUserPassword,\n      fullName: fullName,\n      urlProfilePicture: urlProfilePicture,\n      SignIn: SignIn,\n      SignInGoogle: SignInGoogle,\n      SearchUserDetails: SearchUserDetails,\n      SignOut: SignOut,\n      ClearUserInfo: ClearUserInfo\n    },\n    children: props.children\n  });\n};","map":null,"metadata":{},"sourceType":"module"}