{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"D:\\\\Desktop\\\\Solve\\\\TREINAMENTOS\\\\NLW\\\\#4\\\\moveit-next\\\\src\\\\contexts\\\\ChallengeContexts.tsx\",\n    _s = $RefreshSig$();\n\nimport { createContext, useEffect, useState } from \"react\";\nimport challenges from \"../../challenges.json\";\nimport Cookies from \"js-cookie\";\nimport { LevelUpModal } from \"../components/LevelUpModal\";\nexport var ChallengesContext = /*#__PURE__*/createContext({});\nexport function ChallengesProvider(props) {\n  _s();\n\n  var _props$level,\n      _props$currentExperie,\n      _props$challengesComp,\n      _props$isDark,\n      _this = this;\n\n  var _useState = useState((_props$level = props.level) !== null && _props$level !== void 0 ? _props$level : 1),\n      level = _useState[0],\n      setLevel = _useState[1];\n\n  var _useState2 = useState((_props$currentExperie = props.currentExperience) !== null && _props$currentExperie !== void 0 ? _props$currentExperie : 0),\n      currentExperience = _useState2[0],\n      setCurrentExperience = _useState2[1];\n\n  var _useState3 = useState((_props$challengesComp = props.challengesCompleted) !== null && _props$challengesComp !== void 0 ? _props$challengesComp : 0),\n      challengesCompleted = _useState3[0],\n      setChallengesCompleted = _useState3[1];\n\n  var _useState4 = useState(null),\n      activeChallenge = _useState4[0],\n      setActiveChallenge = _useState4[1];\n\n  var experienceToNextLevel = Math.pow((level + 1) * 4, 2);\n\n  var _useState5 = useState(false),\n      isLevelUpModalOpen = _useState5[0],\n      setIsLevelUpModalOpen = _useState5[1];\n\n  var _useState6 = useState((_props$isDark = props.isDark) !== null && _props$isDark !== void 0 ? _props$isDark : false),\n      isDark = _useState6[0],\n      setIsDark = _useState6[1];\n\n  var _useState7 = useState(''),\n      accessToken = _useState7[0],\n      setAccessToken = _useState7[1];\n\n  useEffect(function () {\n    if (Notification) Notification.requestPermission();\n    if (isDark) document.body.classList.add(\"body-dt\");else document.body.classList.remove(\"body-dt\");\n    console.log(props.accessToken);\n\n    if (props.accessToken.length === 0) {\n      return /*#__PURE__*/_jsxDEV(ChallengesContext.Provider, {\n        value: {\n          isDark: isDark,\n          level: level,\n          experienceToNextLevel: experienceToNextLevel,\n          currentExperience: currentExperience,\n          challengesCompleted: challengesCompleted,\n          startNewChallenge: startNewChallenge,\n          activeChallenge: activeChallenge,\n          resetChallenge: resetChallenge,\n          completeChallenge: completeChallenge,\n          levelUp: levelUp,\n          closeLevelUpModal: closeLevelUpModal,\n          SetDarkTheme: SetDarkTheme,\n          accessToken: accessToken\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, _this), isLevelUpModalOpen && /*#__PURE__*/_jsxDEV(LevelUpModal, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 34\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, _this);\n    }\n  }, []);\n  useEffect(function () {\n    Cookies.set('isDark', isDark.toString());\n  }, [isDark]);\n  useEffect(function () {\n    Cookies.set(\"level\", level.toString());\n    Cookies.set(\"currentExperience\", currentExperience.toString());\n    Cookies.set(\"challengesCompleted\", challengesCompleted.toString());\n  }, [level, currentExperience, challengesCompleted]);\n\n  function SetDarkTheme(isSet) {\n    if (isSet) document.body.classList.add(\"body-dt\");else document.body.classList.remove(\"body-dt\");\n    Cookies.set('isDark', isDark.toString());\n    setIsDark(isSet);\n  }\n\n  function levelUp() {\n    setLevel(level + 1);\n    setIsLevelUpModalOpen(true);\n  }\n\n  function closeLevelUpModal() {\n    setIsLevelUpModalOpen(false);\n  }\n\n  function startNewChallenge() {\n    var randomChallengIndex = Math.floor(Math.random() * challenges.length);\n    var challenge = challenges[randomChallengIndex];\n    setActiveChallenge(challenge);\n\n    if (Audio) {\n      new Audio(\"/notification.mp3\").play();\n    }\n\n    if (Notification) {\n      if (Notification.permission === \"granted\") {\n        new Notification(\"Novo desafio\", {\n          body: \"Valendo: \".concat(challenge.amount, \"xp!\")\n        });\n      }\n    }\n  }\n\n  function resetChallenge() {\n    setActiveChallenge(null);\n  }\n\n  function completeChallenge() {\n    if (!activeChallenge) return;\n    var amount = activeChallenge.amount;\n    var finalExperience = currentExperience + amount;\n\n    if (finalExperience >= experienceToNextLevel) {\n      finalExperience = finalExperience - experienceToNextLevel;\n      levelUp();\n    }\n\n    setCurrentExperience(finalExperience);\n    setActiveChallenge(null);\n    setChallengesCompleted(challengesCompleted + 1);\n  }\n\n  return /*#__PURE__*/_jsxDEV(ChallengesContext.Provider, {\n    value: {\n      isDark: isDark,\n      level: level,\n      experienceToNextLevel: experienceToNextLevel,\n      currentExperience: currentExperience,\n      challengesCompleted: challengesCompleted,\n      startNewChallenge: startNewChallenge,\n      activeChallenge: activeChallenge,\n      resetChallenge: resetChallenge,\n      completeChallenge: completeChallenge,\n      levelUp: levelUp,\n      closeLevelUpModal: closeLevelUpModal,\n      SetDarkTheme: SetDarkTheme,\n      accessToken: accessToken\n    },\n    children: [props.children, isLevelUpModalOpen && /*#__PURE__*/_jsxDEV(LevelUpModal, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 30\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 150,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ChallengesProvider, \"2ec51C4RZZDlGW4u7r6E2/YTX8w=\");\n\n_c = ChallengesProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"ChallengesProvider\");","map":{"version":3,"sources":["D:/Desktop/Solve/TREINAMENTOS/NLW/#4/moveit-next/src/contexts/ChallengeContexts.tsx"],"names":["createContext","useEffect","useState","challenges","Cookies","LevelUpModal","ChallengesContext","ChallengesProvider","props","level","setLevel","currentExperience","setCurrentExperience","challengesCompleted","setChallengesCompleted","activeChallenge","setActiveChallenge","experienceToNextLevel","Math","pow","isLevelUpModalOpen","setIsLevelUpModalOpen","isDark","setIsDark","accessToken","setAccessToken","Notification","requestPermission","document","body","classList","add","remove","console","log","length","startNewChallenge","resetChallenge","completeChallenge","levelUp","closeLevelUpModal","SetDarkTheme","set","toString","isSet","randomChallengIndex","floor","random","challenge","Audio","play","permission","amount","finalExperience","children"],"mappings":";;;;;AAAA,SAASA,aAAT,EAAmCC,SAAnC,EAA8CC,QAA9C,QAA8D,OAA9D;AACA,OAAOC,UAAP,MAAuB,uBAAvB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,SAASC,YAAT,QAA6B,4BAA7B;AAkCA,OAAO,IAAMC,iBAAiB,gBAAGN,aAAa,CAAC,EAAD,CAAvC;AAEP,OAAO,SAASO,kBAAT,CAA4BC,KAA5B,EAA4D;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA,kBACvCN,QAAQ,iBAACM,KAAK,CAACC,KAAP,uDAAgB,CAAhB,CAD+B;AAAA,MAC1DA,KAD0D;AAAA,MACnDC,QADmD;;AAAA,mBAEfR,QAAQ,0BACxDM,KAAK,CAACG,iBADkD,yEAC7B,CAD6B,CAFO;AAAA,MAE1DA,iBAF0D;AAAA,MAEvCC,oBAFuC;;AAAA,mBAKXV,QAAQ,0BAC5DM,KAAK,CAACK,mBADsD,yEAC/B,CAD+B,CALG;AAAA,MAK1DA,mBAL0D;AAAA,MAKrCC,sBALqC;;AAAA,mBAQnBZ,QAAQ,CAAC,IAAD,CARW;AAAA,MAQ1Da,eAR0D;AAAA,MAQzCC,kBARyC;;AASjE,MAAMC,qBAAqB,GAAGC,IAAI,CAACC,GAAL,CAAS,CAACV,KAAK,GAAG,CAAT,IAAc,CAAvB,EAA0B,CAA1B,CAA9B;;AATiE,mBAUbP,QAAQ,CAAC,KAAD,CAVK;AAAA,MAU1DkB,kBAV0D;AAAA,MAUtCC,qBAVsC;;AAAA,mBAWrCnB,QAAQ,kBAACM,KAAK,CAACc,MAAP,yDAAiB,KAAjB,CAX6B;AAAA,MAW1DA,MAX0D;AAAA,MAWlDC,SAXkD;;AAAA,mBAY3BrB,QAAQ,CAAC,EAAD,CAZmB;AAAA,MAY1DsB,WAZ0D;AAAA,MAY7CC,cAZ6C;;AAcjExB,EAAAA,SAAS,CAAC,YAAM;AACd,QAAIyB,YAAJ,EAAkBA,YAAY,CAACC,iBAAb;AAClB,QAAIL,MAAJ,EAAYM,QAAQ,CAACC,IAAT,CAAcC,SAAd,CAAwBC,GAAxB,CAA4B,SAA5B,EAAZ,KACKH,QAAQ,CAACC,IAAT,CAAcC,SAAd,CAAwBE,MAAxB,CAA+B,SAA/B;AAELC,IAAAA,OAAO,CAACC,GAAR,CAAY1B,KAAK,CAACgB,WAAlB;;AACA,QAAGhB,KAAK,CAACgB,WAAN,CAAkBW,MAAlB,KAA6B,CAAhC,EAAmC;AACjC,0BACE,QAAC,iBAAD,CAAmB,QAAnB;AACE,QAAA,KAAK,EAAE;AACLb,UAAAA,MAAM,EAANA,MADK;AAELb,UAAAA,KAAK,EAALA,KAFK;AAGLQ,UAAAA,qBAAqB,EAArBA,qBAHK;AAILN,UAAAA,iBAAiB,EAAjBA,iBAJK;AAKLE,UAAAA,mBAAmB,EAAnBA,mBALK;AAMLuB,UAAAA,iBAAiB,EAAjBA,iBANK;AAOLrB,UAAAA,eAAe,EAAfA,eAPK;AAQLsB,UAAAA,cAAc,EAAdA,cARK;AASLC,UAAAA,iBAAiB,EAAjBA,iBATK;AAULC,UAAAA,OAAO,EAAPA,OAVK;AAWLC,UAAAA,iBAAiB,EAAjBA,iBAXK;AAYLC,UAAAA,YAAY,EAAZA,YAZK;AAaLjB,UAAAA,WAAW,EAAXA;AAbK,SADT;AAAA,gCAiBE;AAAA;AAAA;AAAA;AAAA,iBAjBF,EAkBGJ,kBAAkB,iBAAI,QAAC,YAAD;AAAA;AAAA;AAAA;AAAA,iBAlBzB;AAAA;AAAA;AAAA;AAAA;AAAA,eADF;AAsBD;AACF,GA9BQ,EA8BN,EA9BM,CAAT;AAgCAnB,EAAAA,SAAS,CAAC,YAAM;AACdG,IAAAA,OAAO,CAACsC,GAAR,CAAY,QAAZ,EAAqBpB,MAAM,CAACqB,QAAP,EAArB;AACD,GAFQ,EAEN,CAACrB,MAAD,CAFM,CAAT;AAIArB,EAAAA,SAAS,CAAC,YAAM;AACdG,IAAAA,OAAO,CAACsC,GAAR,CAAY,OAAZ,EAAqBjC,KAAK,CAACkC,QAAN,EAArB;AACAvC,IAAAA,OAAO,CAACsC,GAAR,CAAY,mBAAZ,EAAiC/B,iBAAiB,CAACgC,QAAlB,EAAjC;AACAvC,IAAAA,OAAO,CAACsC,GAAR,CAAY,qBAAZ,EAAmC7B,mBAAmB,CAAC8B,QAApB,EAAnC;AACD,GAJQ,EAIN,CAAClC,KAAD,EAAQE,iBAAR,EAA2BE,mBAA3B,CAJM,CAAT;;AAMA,WAAS4B,YAAT,CAAsBG,KAAtB,EAA6B;AAC3B,QAAIA,KAAJ,EAAWhB,QAAQ,CAACC,IAAT,CAAcC,SAAd,CAAwBC,GAAxB,CAA4B,SAA5B,EAAX,KACKH,QAAQ,CAACC,IAAT,CAAcC,SAAd,CAAwBE,MAAxB,CAA+B,SAA/B;AAEL5B,IAAAA,OAAO,CAACsC,GAAR,CAAY,QAAZ,EAAqBpB,MAAM,CAACqB,QAAP,EAArB;AACApB,IAAAA,SAAS,CAACqB,KAAD,CAAT;AACD;;AACD,WAASL,OAAT,GAAmB;AACjB7B,IAAAA,QAAQ,CAACD,KAAK,GAAG,CAAT,CAAR;AACAY,IAAAA,qBAAqB,CAAC,IAAD,CAArB;AACD;;AACD,WAASmB,iBAAT,GAA6B;AAC3BnB,IAAAA,qBAAqB,CAAC,KAAD,CAArB;AACD;;AACD,WAASe,iBAAT,GAA6B;AAC3B,QAAMS,mBAAmB,GAAG3B,IAAI,CAAC4B,KAAL,CAAW5B,IAAI,CAAC6B,MAAL,KAAgB5C,UAAU,CAACgC,MAAtC,CAA5B;AACA,QAAMa,SAAS,GAAG7C,UAAU,CAAC0C,mBAAD,CAA5B;AACA7B,IAAAA,kBAAkB,CAACgC,SAAD,CAAlB;;AAEA,QAAIC,KAAJ,EAAW;AACT,UAAIA,KAAJ,CAAU,mBAAV,EAA+BC,IAA/B;AACD;;AAED,QAAIxB,YAAJ,EAAkB;AAChB,UAAIA,YAAY,CAACyB,UAAb,KAA4B,SAAhC,EAA2C;AACzC,YAAIzB,YAAJ,CAAiB,cAAjB,EAAiC;AAC/BG,UAAAA,IAAI,qBAAcmB,SAAS,CAACI,MAAxB;AAD2B,SAAjC;AAGD;AACF;AACF;;AAED,WAASf,cAAT,GAA0B;AACxBrB,IAAAA,kBAAkB,CAAC,IAAD,CAAlB;AACD;;AAED,WAASsB,iBAAT,GAA6B;AAC3B,QAAI,CAACvB,eAAL,EAAsB;AADK,QAGnBqC,MAHmB,GAGRrC,eAHQ,CAGnBqC,MAHmB;AAK3B,QAAIC,eAAe,GAAG1C,iBAAiB,GAAGyC,MAA1C;;AAEA,QAAIC,eAAe,IAAIpC,qBAAvB,EAA8C;AAC5CoC,MAAAA,eAAe,GAAGA,eAAe,GAAGpC,qBAApC;AACAsB,MAAAA,OAAO;AACR;;AAED3B,IAAAA,oBAAoB,CAACyC,eAAD,CAApB;AACArC,IAAAA,kBAAkB,CAAC,IAAD,CAAlB;AACAF,IAAAA,sBAAsB,CAACD,mBAAmB,GAAG,CAAvB,CAAtB;AACD;;AAED,sBACE,QAAC,iBAAD,CAAmB,QAAnB;AACE,IAAA,KAAK,EAAE;AACLS,MAAAA,MAAM,EAANA,MADK;AAELb,MAAAA,KAAK,EAALA,KAFK;AAGLQ,MAAAA,qBAAqB,EAArBA,qBAHK;AAILN,MAAAA,iBAAiB,EAAjBA,iBAJK;AAKLE,MAAAA,mBAAmB,EAAnBA,mBALK;AAMLuB,MAAAA,iBAAiB,EAAjBA,iBANK;AAOLrB,MAAAA,eAAe,EAAfA,eAPK;AAQLsB,MAAAA,cAAc,EAAdA,cARK;AASLC,MAAAA,iBAAiB,EAAjBA,iBATK;AAULC,MAAAA,OAAO,EAAPA,OAVK;AAWLC,MAAAA,iBAAiB,EAAjBA,iBAXK;AAYLC,MAAAA,YAAY,EAAZA,YAZK;AAaLjB,MAAAA,WAAW,EAAXA;AAbK,KADT;AAAA,eAiBGhB,KAAK,CAAC8C,QAjBT,EAkBGlC,kBAAkB,iBAAI,QAAC,YAAD;AAAA;AAAA;AAAA;AAAA,YAlBzB;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAsBD;;GAnIeb,kB;;KAAAA,kB","sourcesContent":["import { createContext, ReactNode, useEffect, useState } from \"react\";\r\nimport challenges from \"../../challenges.json\";\r\nimport Cookies from \"js-cookie\";\r\nimport { LevelUpModal } from \"../components/LevelUpModal\";\r\nimport { GetServerSideProps } from \"next\";\r\n\r\ninterface Challenge {\r\n  type: \"body\" | \"eye\";\r\n  description: string;\r\n  amount: number;\r\n}\r\n\r\ninterface ChallengeContextData {\r\n  level: number;\r\n  experienceToNextLevel: number;\r\n  currentExperience: number;\r\n  challengesCompleted: number;\r\n  activeChallenge: Challenge;\r\n  isDark: boolean;\r\n  accessToken: string;\r\n  startNewChallenge: () => void;\r\n  resetChallenge: () => void;\r\n  completeChallenge: () => void;\r\n  levelUp: () => void;\r\n  closeLevelUpModal: () => void;\r\n  SetDarkTheme: (isSet) => void;\r\n}\r\n\r\ninterface ChallengesProviderProps {\r\n  children: ReactNode;\r\n  level: number;\r\n  currentExperience: number;\r\n  challengesCompleted: number;\r\n  isDark: boolean;\r\n  accessToken: string;\r\n}\r\n\r\nexport const ChallengesContext = createContext({} as ChallengeContextData);\r\n\r\nexport function ChallengesProvider(props: ChallengesProviderProps) {\r\n  const [level, setLevel] = useState(props.level ?? 1);\r\n  const [currentExperience, setCurrentExperience] = useState(\r\n    props.currentExperience ?? 0\r\n  );\r\n  const [challengesCompleted, setChallengesCompleted] = useState(\r\n    props.challengesCompleted ?? 0\r\n  );\r\n  const [activeChallenge, setActiveChallenge] = useState(null);\r\n  const experienceToNextLevel = Math.pow((level + 1) * 4, 2);\r\n  const [isLevelUpModalOpen, setIsLevelUpModalOpen] = useState(false);\r\n  const [isDark, setIsDark] = useState(props.isDark ?? false);\r\n  const [accessToken, setAccessToken] = useState('');\r\n\r\n  useEffect(() => {\r\n    if (Notification) Notification.requestPermission();\r\n    if (isDark) document.body.classList.add(\"body-dt\");\r\n    else document.body.classList.remove(\"body-dt\");\r\n\r\n    console.log(props.accessToken)\r\n    if(props.accessToken.length === 0) {\r\n      return (\r\n        <ChallengesContext.Provider\r\n          value={{\r\n            isDark,\r\n            level,\r\n            experienceToNextLevel,\r\n            currentExperience,\r\n            challengesCompleted,\r\n            startNewChallenge,\r\n            activeChallenge,\r\n            resetChallenge,\r\n            completeChallenge,\r\n            levelUp,\r\n            closeLevelUpModal,\r\n            SetDarkTheme,\r\n            accessToken\r\n          }}\r\n        >\r\n          <div/>\r\n          {isLevelUpModalOpen && <LevelUpModal />}\r\n        </ChallengesContext.Provider>\r\n      );\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    Cookies.set('isDark',isDark.toString())\r\n  }, [isDark])\r\n\r\n  useEffect(() => {\r\n    Cookies.set(\"level\", level.toString());\r\n    Cookies.set(\"currentExperience\", currentExperience.toString());\r\n    Cookies.set(\"challengesCompleted\", challengesCompleted.toString());\r\n  }, [level, currentExperience, challengesCompleted]);\r\n\r\n  function SetDarkTheme(isSet) {\r\n    if (isSet) document.body.classList.add(\"body-dt\");\r\n    else document.body.classList.remove(\"body-dt\");\r\n\r\n    Cookies.set('isDark',isDark.toString())\r\n    setIsDark(isSet);\r\n  }\r\n  function levelUp() {\r\n    setLevel(level + 1);\r\n    setIsLevelUpModalOpen(true);\r\n  }\r\n  function closeLevelUpModal() {\r\n    setIsLevelUpModalOpen(false);\r\n  }\r\n  function startNewChallenge() {\r\n    const randomChallengIndex = Math.floor(Math.random() * challenges.length);\r\n    const challenge = challenges[randomChallengIndex];\r\n    setActiveChallenge(challenge);\r\n\r\n    if (Audio) {\r\n      new Audio(\"/notification.mp3\").play();\r\n    }\r\n\r\n    if (Notification) {\r\n      if (Notification.permission === \"granted\") {\r\n        new Notification(\"Novo desafio\", {\r\n          body: `Valendo: ${challenge.amount}xp!`,\r\n        });\r\n      }\r\n    }\r\n  }\r\n\r\n  function resetChallenge() {\r\n    setActiveChallenge(null);\r\n  }\r\n\r\n  function completeChallenge() {\r\n    if (!activeChallenge) return;\r\n\r\n    const { amount } = activeChallenge;\r\n\r\n    let finalExperience = currentExperience + amount;\r\n\r\n    if (finalExperience >= experienceToNextLevel) {\r\n      finalExperience = finalExperience - experienceToNextLevel;\r\n      levelUp();\r\n    }\r\n\r\n    setCurrentExperience(finalExperience);\r\n    setActiveChallenge(null);\r\n    setChallengesCompleted(challengesCompleted + 1);\r\n  }\r\n\r\n  return (\r\n    <ChallengesContext.Provider\r\n      value={{\r\n        isDark,\r\n        level,\r\n        experienceToNextLevel,\r\n        currentExperience,\r\n        challengesCompleted,\r\n        startNewChallenge,\r\n        activeChallenge,\r\n        resetChallenge,\r\n        completeChallenge,\r\n        levelUp,\r\n        closeLevelUpModal,\r\n        SetDarkTheme,\r\n        accessToken\r\n      }}\r\n    >\r\n      {props.children}\r\n      {isLevelUpModalOpen && <LevelUpModal />}\r\n    </ChallengesContext.Provider>\r\n  );\r\n}"]},"metadata":{},"sourceType":"module"}