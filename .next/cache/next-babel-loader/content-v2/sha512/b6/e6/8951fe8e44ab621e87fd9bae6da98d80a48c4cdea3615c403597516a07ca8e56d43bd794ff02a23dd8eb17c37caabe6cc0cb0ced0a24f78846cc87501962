{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\Desktop\\\\Solve\\\\TREINAMENTOS\\\\NLW\\\\#4\\\\moveit-next\\\\src\\\\contexts\\\\GlobalProvider.tsx\";\nimport { useContext } from \"react\";\nimport { ChallengesContext, ChallengesProvider } from \"../contexts/ChallengeContexts\";\nimport { UserProvider } from \"../contexts/LoginContexts\";\nexport default function GlobalProvider(props) {\n  const {\n    level,\n    currentExperience,\n    challengesCompleted\n  } = useContext(ChallengesContext);\n  console.log(level);\n  console.log(currentExperience);\n  console.log(challengesCompleted);\n  return /*#__PURE__*/_jsxDEV(ChallengesProvider, {\n    level: props.level,\n    currentExperience: props.currentExperience,\n    challengesCompleted: props.challengesCompleted,\n    children: /*#__PURE__*/_jsxDEV(UserProvider, {\n      children: props.children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 11\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 9\n  }, this);\n} //   export const getServerSideProps: GetServerSideProps = async (ctx) => {\n//       console.log(ctx)\n//     const { level, currentExperience, challengesCompleted } = ctx.req.cookies;\n//     return {\n//       props: {\n//         level: Number(level),\n//         currentExperience: Number(currentExperience),\n//         challengesCompleted: Number(challengesCompleted),\n//       },\n//     };\n//   };","map":{"version":3,"sources":["D:/Desktop/Solve/TREINAMENTOS/NLW/#4/moveit-next/src/contexts/GlobalProvider.tsx"],"names":["useContext","ChallengesContext","ChallengesProvider","UserProvider","GlobalProvider","props","level","currentExperience","challengesCompleted","console","log","children"],"mappings":";;AACA,SAASA,UAAT,QAA2B,OAA3B;AAEA,SAASC,iBAAT,EAA4BC,kBAA5B,QAAsD,+BAAtD;AACA,SAASC,YAAT,QAA6B,2BAA7B;AAEA,eAAe,SAASC,cAAT,CAAwBC,KAAxB,EAA+B;AAC1C,QAAM;AAACC,IAAAA,KAAD;AAAQC,IAAAA,iBAAR;AAA2BC,IAAAA;AAA3B,MAAkDR,UAAU,CAACC,iBAAD,CAAlE;AAEAQ,EAAAA,OAAO,CAACC,GAAR,CAAYJ,KAAZ;AACAG,EAAAA,OAAO,CAACC,GAAR,CAAYH,iBAAZ;AACAE,EAAAA,OAAO,CAACC,GAAR,CAAYF,mBAAZ;AAEA,sBACI,QAAC,kBAAD;AACE,IAAA,KAAK,EAAEH,KAAK,CAACC,KADf;AAEE,IAAA,iBAAiB,EAAED,KAAK,CAACE,iBAF3B;AAGE,IAAA,mBAAmB,EAAEF,KAAK,CAACG,mBAH7B;AAAA,2BAKE,QAAC,YAAD;AAAA,gBAAeH,KAAK,CAACM;AAArB;AAAA;AAAA;AAAA;AAAA;AALF;AAAA;AAAA;AAAA;AAAA,UADJ;AASD,C,CAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import { GetServerSideProps } from \"next\";\r\nimport { useContext } from \"react\";\r\n\r\nimport { ChallengesContext, ChallengesProvider } from \"../contexts/ChallengeContexts\";\r\nimport { UserProvider } from \"../contexts/LoginContexts\";\r\n\r\nexport default function GlobalProvider(props) {\r\n    const {level, currentExperience, challengesCompleted} = useContext(ChallengesContext)\r\n\r\n    console.log(level)\r\n    console.log(currentExperience)\r\n    console.log(challengesCompleted)\r\n\r\n    return (\r\n        <ChallengesProvider\r\n          level={props.level}\r\n          currentExperience={props.currentExperience}\r\n          challengesCompleted={props.challengesCompleted}\r\n        >\r\n          <UserProvider>{props.children}</UserProvider>\r\n        </ChallengesProvider>\r\n    );\r\n  }\r\n\r\n//   export const getServerSideProps: GetServerSideProps = async (ctx) => {\r\n//       console.log(ctx)\r\n//     const { level, currentExperience, challengesCompleted } = ctx.req.cookies;\r\n//     return {\r\n//       props: {\r\n//         level: Number(level),\r\n//         currentExperience: Number(currentExperience),\r\n//         challengesCompleted: Number(challengesCompleted),\r\n//       },\r\n//     };\r\n//   };\r\n  "]},"metadata":{},"sourceType":"module"}