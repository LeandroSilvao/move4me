{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\Desktop\\\\Solve\\\\TREINAMENTOS\\\\NLW\\\\#4\\\\moveit-next\\\\src\\\\contexts\\\\GlobalProvider.tsx\";\nimport Cookies from \"js-cookie\";\nimport { ChallengesProvider } from \"../contexts/ChallengeContexts\";\nimport { UserProvider } from \"../contexts/LoginContexts\";\nexport default function GlobalProvider(props) {\n  return /*#__PURE__*/_jsxDEV(ChallengesProvider, {\n    level: parseInt(Cookies.get('level')),\n    currentExperience: parseInt(Cookies.get('currentExperience')),\n    challengesCompleted: parseInt(Cookies.get('challengesCompleted')),\n    children: /*#__PURE__*/_jsxDEV(UserProvider, {\n      children: props.children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 5\n  }, this);\n} // export const getServerSideProps: GetServerSideProps = async (ctx) => {\n//   const { level, currentExperience, challengesCompleted } = ctx.req.cookies;\n//   return {\n//     props: {\n//       level: Number(level),\n//       currentExperience: Number(currentExperience),\n//       challengesCompleted: Number(challengesCompleted),\n//     },\n//   };\n// };\n\n_c = GlobalProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"GlobalProvider\");","map":{"version":3,"sources":["D:/Desktop/Solve/TREINAMENTOS/NLW/#4/moveit-next/src/contexts/GlobalProvider.tsx"],"names":["Cookies","ChallengesProvider","UserProvider","GlobalProvider","props","parseInt","get","children"],"mappings":";;AAAA,OAAOA,OAAP,MAAoB,WAApB;AAEA,SAASC,kBAAT,QAAmC,+BAAnC;AACA,SAASC,YAAT,QAA6B,2BAA7B;AAEA,eAAe,SAASC,cAAT,CAAwBC,KAAxB,EAA+B;AAC5C,sBACE,QAAC,kBAAD;AACE,IAAA,KAAK,EAAEC,QAAQ,CAACL,OAAO,CAACM,GAAR,CAAY,OAAZ,CAAD,CADjB;AAEE,IAAA,iBAAiB,EAAED,QAAQ,CAACL,OAAO,CAACM,GAAR,CAAY,mBAAZ,CAAD,CAF7B;AAGE,IAAA,mBAAmB,EAAED,QAAQ,CAACL,OAAO,CAACM,GAAR,CAAY,qBAAZ,CAAD,CAH/B;AAAA,2BAKE,QAAC,YAAD;AAAA,gBAAeF,KAAK,CAACG;AAArB;AAAA;AAAA;AAAA;AAAA;AALF;AAAA;AAAA;AAAA;AAAA,UADF;AASD,C,CAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;KArBwBJ,c","sourcesContent":["import Cookies from \"js-cookie\";\r\nimport { GetServerSideProps } from \"next\";\r\nimport { ChallengesProvider } from \"../contexts/ChallengeContexts\";\r\nimport { UserProvider } from \"../contexts/LoginContexts\";\r\n\r\nexport default function GlobalProvider(props) {\r\n  return (\r\n    <ChallengesProvider\r\n      level={parseInt(Cookies.get('level'))}\r\n      currentExperience={parseInt(Cookies.get('currentExperience'))}\r\n      challengesCompleted={parseInt(Cookies.get('challengesCompleted'))}\r\n    >\r\n      <UserProvider>{props.children}</UserProvider>\r\n    </ChallengesProvider>\r\n  );\r\n}\r\n\r\n// export const getServerSideProps: GetServerSideProps = async (ctx) => {\r\n//   const { level, currentExperience, challengesCompleted } = ctx.req.cookies;\r\n//   return {\r\n//     props: {\r\n//       level: Number(level),\r\n//       currentExperience: Number(currentExperience),\r\n//       challengesCompleted: Number(challengesCompleted),\r\n//     },\r\n//   };\r\n// };\r\n"]},"metadata":{},"sourceType":"module"}