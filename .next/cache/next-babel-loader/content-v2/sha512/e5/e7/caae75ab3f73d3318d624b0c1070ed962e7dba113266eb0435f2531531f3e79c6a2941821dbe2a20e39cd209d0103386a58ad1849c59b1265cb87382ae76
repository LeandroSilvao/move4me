{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"D:\\\\Desktop\\\\Solve\\\\TREINAMENTOS\\\\NLW\\\\#4\\\\moveit-next\\\\src\\\\contexts\\\\LoginContexts.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport { createContext, useState } from \"react\";\nimport { useRouter } from 'next/router';\nimport axios from \"axios\";\nimport Cookies from \"js-cookie\";\nimport config from '../config';\nexport var UserContext = /*#__PURE__*/createContext({});\nexport var UserProvider = function UserProvider(props) {\n  _s();\n\n  var _useState = useState(\"\"),\n      username = _useState[0],\n      setUsername = _useState[1];\n\n  var _useState2 = useState(\"\"),\n      password = _useState2[0],\n      setPassword = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      fullName = _useState3[0],\n      setFullName = _useState3[1];\n\n  var _useState4 = useState(\"\"),\n      urlProfilePicture = _useState4[0],\n      setUrlProfilePicture = _useState4[1];\n\n  var _useState5 = useState(false),\n      authenticated = _useState5[0],\n      setAuthenticated = _useState5[1];\n\n  var _useState6 = useState(false),\n      googleAuthenticated = _useState6[0],\n      setGoogleAuthenticated = _useState6[1];\n\n  var _useState7 = useState(''),\n      accessToken = _useState7[0],\n      setAccessToken = _useState7[1];\n\n  var router = useRouter();\n\n  function ClearUserInfo() {\n    setUsername('');\n    setPassword('');\n    setFullName('');\n    setAuthenticated(false);\n    setGoogleAuthenticated(false);\n    setAccessToken('');\n    setUrlProfilePicture('');\n    Cookies.set('accessToken', '');\n  }\n\n  function setUser(e) {\n    var username = e.target.value;\n    setUsername(username);\n  }\n\n  function setUserPassword(e) {\n    var password = e.target.value;\n    setPassword(password);\n  }\n\n  function SignIn() {\n    axios.post(\"/api/auth?grant_type=password&username=\".concat(username, \"&password=\").concat(password)).then(function (res) {\n      if (res.data.access_token) {\n        setAccessToken(res.data.access_token);\n        setAuthenticated(true);\n        axios.get(\"\".concat(config.urlGitLabUserInfo).concat(username)).then(function (res) {\n          setFullName(res.data[0].name);\n          var urlProfilePicture = res.data[0].avatar_url.replace('10.10.1.35', '177.84.246.126:9955');\n          setUrlProfilePicture(urlProfilePicture);\n        });\n        router.push('/home');\n      }\n    })[\"catch\"](function (err) {\n      return console.log(err);\n    });\n  }\n\n  function SearchUserDetails(token) {\n    axios.get(\"\".concat(config.urlUserIngoGoogle).concat(token)).then(function (res) {\n      var _res$data = res.data,\n          picture = _res$data.picture,\n          given_name = _res$data.given_name;\n      setUrlProfilePicture(picture);\n      setFullName(given_name);\n      setUsername(res.data.email.split(\"@\")[0]);\n    });\n  }\n\n  function SignInGoogle(_ref) {\n    var accessToken = _ref.accessToken;\n    Cookies.set('accessToken', accessToken);\n    setAccessToken(accessToken);\n    setGoogleAuthenticated(true);\n    SearchUserDetails(accessToken);\n    router.push('/home');\n  }\n\n  function SignOut() {\n    router.push('/');\n    ClearUserInfo();\n  }\n\n  return /*#__PURE__*/_jsxDEV(UserContext.Provider, {\n    value: {\n      username: username,\n      setUser: setUser,\n      password: password,\n      setUserPassword: setUserPassword,\n      fullName: fullName,\n      urlProfilePicture: urlProfilePicture,\n      SignIn: SignIn,\n      SignInGoogle: SignInGoogle,\n      SearchUserDetails: SearchUserDetails,\n      SignOut: SignOut,\n      ClearUserInfo: ClearUserInfo\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 93,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(UserProvider, \"P0U0a3T+tSk2OKnQdcMd9Dv79Is=\", false, function () {\n  return [useRouter];\n});\n\n_c = UserProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"UserProvider\");","map":{"version":3,"sources":["D:/Desktop/Solve/TREINAMENTOS/NLW/#4/moveit-next/src/contexts/LoginContexts.tsx"],"names":["createContext","useState","useRouter","axios","Cookies","config","UserContext","UserProvider","props","username","setUsername","password","setPassword","fullName","setFullName","urlProfilePicture","setUrlProfilePicture","authenticated","setAuthenticated","googleAuthenticated","setGoogleAuthenticated","accessToken","setAccessToken","router","ClearUserInfo","set","setUser","e","target","value","setUserPassword","SignIn","post","then","res","data","access_token","get","urlGitLabUserInfo","name","avatar_url","replace","push","err","console","log","SearchUserDetails","token","urlUserIngoGoogle","picture","given_name","email","split","SignInGoogle","SignOut","children"],"mappings":"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","sourcesContent":["import { createContext, ReactNode, useEffect, useState } from \"react\";\r\nimport { useRouter } from 'next/router'\r\nimport axios from \"axios\";\r\nimport Cookies from \"js-cookie\";\r\nimport config from '../config'\r\n\r\ninterface UserContextData {\r\n  username: string;\r\n  password: string;\r\n  fullName: string;\r\n  urlProfilePicture: string;\r\n  setUser: (e) => void;\r\n  setUserPassword: (e) => void;\r\n  SignIn: () => void;\r\n  SignInGoogle: (res) => void;\r\n  SignOut: () => void;\r\n  SearchUserDetails: (token) => void;\r\n  ClearUserInfo: () => void;\r\n}\r\nexport const UserContext = createContext({} as UserContextData);\r\n\r\nexport const UserProvider: React.FC = (props) => {\r\n  const [username, setUsername] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [fullName, setFullName] = useState(\"\");\r\n  const [urlProfilePicture, setUrlProfilePicture] = useState(\"\");\r\n  const [authenticated, setAuthenticated] = useState(false);\r\n  const [googleAuthenticated, setGoogleAuthenticated] = useState(false);\r\n  const [accessToken, setAccessToken] = useState('');\r\n  const router = useRouter()\r\n\r\n  function ClearUserInfo(){\r\n    setUsername('')\r\n    setPassword('')\r\n    setFullName('')\r\n    setAuthenticated(false)\r\n    setGoogleAuthenticated(false)\r\n    setAccessToken('')\r\n    setUrlProfilePicture('')\r\n    Cookies.set('accessToken', '')\r\n  }\r\n  function setUser(e) {\r\n    const username = e.target.value;\r\n    setUsername(username);\r\n  }\r\n  function setUserPassword(e) {\r\n    const password = e.target.value;\r\n    setPassword(password);\r\n  }\r\n  function SignIn() {\r\n    axios\r\n      .post(\r\n        `/api/auth?grant_type=password&username=${username}&password=${password}`\r\n      )\r\n      .then((res) => {\r\n        if (res.data.access_token) {\r\n          setAccessToken(res.data.access_token)\r\n          setAuthenticated(true);\r\n\r\n          axios.get(`${config.urlGitLabUserInfo}${username}`)\r\n          .then(res => {\r\n            setFullName(res.data[0].name)\r\n            const urlProfilePicture = res.data[0].avatar_url.replace('10.10.1.35','177.84.246.126:9955')\r\n            setUrlProfilePicture(urlProfilePicture)\r\n          })\r\n          router.push('/home')\r\n        }\r\n      })\r\n      .catch((err) => console.log(err));\r\n  }\r\n  function SearchUserDetails(token){\r\n    axios.get(`${config.urlUserIngoGoogle}${token}`)\r\n    .then(res => {\r\n      const {picture, given_name} = res.data\r\n      setUrlProfilePicture(picture)\r\n      setFullName(given_name)\r\n      setUsername(res.data.email.split(\"@\")[0])\r\n    })\r\n  }\r\n  function SignInGoogle({accessToken}){\r\n      Cookies.set('accessToken', accessToken)\r\n      setAccessToken(accessToken)\r\n      setGoogleAuthenticated(true)\r\n      SearchUserDetails(accessToken)\r\n      router.push('/home')\r\n  }\r\n  function SignOut(){\r\n    router.push('/')\r\n    ClearUserInfo()\r\n  }\r\n\r\n  return (\r\n    <UserContext.Provider\r\n      value={{\r\n        username,\r\n        setUser,\r\n        password,\r\n        setUserPassword,\r\n        fullName,\r\n        urlProfilePicture,\r\n        SignIn,\r\n        SignInGoogle,\r\n        SearchUserDetails,\r\n        SignOut,\r\n        ClearUserInfo\r\n      }}\r\n    >\r\n      {props.children}\r\n    </UserContext.Provider>\r\n  );\r\n};\r\n"]},"metadata":{},"sourceType":"module"}