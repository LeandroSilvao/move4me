{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _objectWithoutProperties from \"D:/Desktop/Solve/TREINAMENTOS/NLW/#4/moveit-next/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\n\nvar _jsxFileName = \"D:\\\\Desktop\\\\Solve\\\\TREINAMENTOS\\\\NLW\\\\#4\\\\moveit-next\\\\src\\\\contexts\\\\ChallengeContexts.tsx\",\n    _s = $RefreshSig$();\n\nimport { createContext, useEffect, useState } from \"react\";\nimport challenges from \"../../challenges.json\";\nimport Cookies from \"js-cookie\";\nimport { LevelUpModal } from \"../components/LevelUpModal\";\nexport var ChallengesContext = /*#__PURE__*/createContext({});\nexport function ChallengesProvider(_ref) {\n  _s();\n\n  var _rest$level, _rest$currentExperien, _rest$challengesCompl;\n\n  var children = _ref.children,\n      rest = _objectWithoutProperties(_ref, [\"children\"]);\n\n  var _useState = useState((_rest$level = rest.level) !== null && _rest$level !== void 0 ? _rest$level : 1),\n      level = _useState[0],\n      setLevel = _useState[1];\n\n  var _useState2 = useState((_rest$currentExperien = rest.currentExperience) !== null && _rest$currentExperien !== void 0 ? _rest$currentExperien : 0),\n      currentExperience = _useState2[0],\n      setCurrentExperience = _useState2[1];\n\n  var _useState3 = useState((_rest$challengesCompl = rest.challengesCompleted) !== null && _rest$challengesCompl !== void 0 ? _rest$challengesCompl : 0),\n      challengesCompleted = _useState3[0],\n      setChallengesCompleted = _useState3[1];\n\n  var _useState4 = useState(null),\n      activeChallenge = _useState4[0],\n      setActiveChallenge = _useState4[1];\n\n  var experienceToNextLevel = Math.pow((level + 1) * 4, 2);\n\n  var _useState5 = useState(false),\n      isLevelUpModalOpen = _useState5[0],\n      setIsLevelUpModalOpen = _useState5[1];\n\n  var _useState6 = useState(false),\n      isDark = _useState6[0],\n      setIsDark = _useState6[1];\n\n  useEffect(function () {// if (Notification) Notification.requestPermission();\n  }, []);\n  useEffect(function () {\n    Cookies.set(\"level\", level.toString());\n    Cookies.set(\"currentExperience\", currentExperience.toString());\n    Cookies.set(\"challengesCompleted\", challengesCompleted.toString());\n  }, [level, currentExperience, challengesCompleted]);\n\n  function SetDarkTheme(isSet) {\n    if (isSet) document.body.classList.add(\"body-dt\");else document.body.classList.remove(\"body-dt\");\n    setIsDark(isSet);\n  }\n\n  function levelUp() {\n    setLevel(level + 1);\n    setIsLevelUpModalOpen(true);\n  }\n\n  function closeLevelUpModal() {\n    setIsLevelUpModalOpen(false);\n  }\n\n  function startNewChallenge() {\n    var randomChallengIndex = Math.floor(Math.random() * challenges.length);\n    var challenge = challenges[randomChallengIndex];\n    setActiveChallenge(challenge); // new Audio(\"/notification.mp3\").play();\n    // if (Notification) {\n    //   if (Notification.permission === \"granted\") {\n    //     new Notification(\"Novo desafio\", {\n    //       body: `Valendo: ${challenge.amount}xp!`,\n    //     });\n    //   }\n    // }\n  }\n\n  function resetChallenge() {\n    setActiveChallenge(null);\n  }\n\n  function completeChallenge() {\n    if (!activeChallenge) return;\n    var amount = activeChallenge.amount;\n    var finalExperience = currentExperience + amount;\n\n    if (finalExperience >= experienceToNextLevel) {\n      finalExperience = finalExperience - experienceToNextLevel;\n      levelUp();\n    }\n\n    setCurrentExperience(finalExperience);\n    setActiveChallenge(null);\n    setChallengesCompleted(challengesCompleted + 1);\n  }\n\n  return /*#__PURE__*/_jsxDEV(ChallengesContext.Provider, {\n    value: {\n      isDark: isDark,\n      level: level,\n      experienceToNextLevel: experienceToNextLevel,\n      currentExperience: currentExperience,\n      challengesCompleted: challengesCompleted,\n      startNewChallenge: startNewChallenge,\n      activeChallenge: activeChallenge,\n      resetChallenge: resetChallenge,\n      completeChallenge: completeChallenge,\n      levelUp: levelUp,\n      closeLevelUpModal: closeLevelUpModal,\n      SetDarkTheme: SetDarkTheme\n    },\n    children: [children, isLevelUpModalOpen && /*#__PURE__*/_jsxDEV(LevelUpModal, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 30\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 112,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ChallengesProvider, \"1oQM4ZM2pX+l2I9OvRQmDSr2J8E=\");\n\n_c = ChallengesProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"ChallengesProvider\");","map":{"version":3,"sources":["D:/Desktop/Solve/TREINAMENTOS/NLW/#4/moveit-next/src/contexts/ChallengeContexts.tsx"],"names":["createContext","useEffect","useState","challenges","Cookies","LevelUpModal","ChallengesContext","ChallengesProvider","children","rest","level","setLevel","currentExperience","setCurrentExperience","challengesCompleted","setChallengesCompleted","activeChallenge","setActiveChallenge","experienceToNextLevel","Math","pow","isLevelUpModalOpen","setIsLevelUpModalOpen","isDark","setIsDark","set","toString","SetDarkTheme","isSet","document","body","classList","add","remove","levelUp","closeLevelUpModal","startNewChallenge","randomChallengIndex","floor","random","length","challenge","resetChallenge","completeChallenge","amount","finalExperience"],"mappings":"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","sourcesContent":["import { createContext, ReactNode, useEffect, useState } from \"react\";\r\nimport challenges from \"../../challenges.json\";\r\nimport Cookies from \"js-cookie\";\r\nimport { LevelUpModal } from \"../components/LevelUpModal\";\r\n\r\ninterface Challenge {\r\n  type: \"body\" | \"eye\";\r\n  description: string;\r\n  amount: number;\r\n}\r\n\r\ninterface ChallengeContextData {\r\n  level: number;\r\n  experienceToNextLevel: number;\r\n  currentExperience: number;\r\n  challengesCompleted: number;\r\n  activeChallenge: Challenge;\r\n  isDark: boolean;\r\n  startNewChallenge: () => void;\r\n  resetChallenge: () => void;\r\n  completeChallenge: () => void;\r\n  levelUp: () => void;\r\n  closeLevelUpModal: () => void;\r\n  SetDarkTheme: (isSet) => void;\r\n}\r\n\r\ninterface ChallengesProviderProps {\r\n  children: ReactNode;\r\n  level: number;\r\n  currentExperience: number;\r\n  challengesCompleted: number;\r\n}\r\n\r\nexport const ChallengesContext = createContext({} as ChallengeContextData);\r\n\r\nexport function ChallengesProvider({\r\n  children,\r\n  ...rest\r\n}: ChallengesProviderProps) {\r\n  const [level, setLevel] = useState(rest.level ?? 1);\r\n  const [currentExperience, setCurrentExperience] = useState(\r\n    rest.currentExperience ?? 0\r\n  );\r\n  const [challengesCompleted, setChallengesCompleted] = useState(\r\n    rest.challengesCompleted ?? 0\r\n  );\r\n  const [activeChallenge, setActiveChallenge] = useState(null);\r\n  const experienceToNextLevel = Math.pow((level + 1) * 4, 2);\r\n  const [isLevelUpModalOpen, setIsLevelUpModalOpen] = useState(false);\r\n  const [isDark, setIsDark] = useState(false);\r\n\r\n  useEffect(() => {\r\n    // if (Notification) Notification.requestPermission();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    Cookies.set(\"level\", level.toString());\r\n    Cookies.set(\"currentExperience\", currentExperience.toString());\r\n    Cookies.set(\"challengesCompleted\", challengesCompleted.toString());\r\n  }, [level, currentExperience, challengesCompleted]);\r\n\r\n  function SetDarkTheme(isSet) {\r\n    if (isSet) document.body.classList.add(\"body-dt\");\r\n    else document.body.classList.remove(\"body-dt\");\r\n    setIsDark(isSet);\r\n  }\r\n  function levelUp() {\r\n    setLevel(level + 1);\r\n    setIsLevelUpModalOpen(true);\r\n  }\r\n  function closeLevelUpModal() {\r\n    setIsLevelUpModalOpen(false);\r\n  }\r\n  function startNewChallenge() {\r\n    const randomChallengIndex = Math.floor(Math.random() * challenges.length);\r\n    const challenge = challenges[randomChallengIndex];\r\n    setActiveChallenge(challenge);\r\n\r\n    // new Audio(\"/notification.mp3\").play();\r\n\r\n    // if (Notification) {\r\n    //   if (Notification.permission === \"granted\") {\r\n    //     new Notification(\"Novo desafio\", {\r\n    //       body: `Valendo: ${challenge.amount}xp!`,\r\n    //     });\r\n    //   }\r\n    // }\r\n  }\r\n\r\n  function resetChallenge() {\r\n    setActiveChallenge(null);\r\n  }\r\n\r\n  function completeChallenge() {\r\n    if (!activeChallenge) return;\r\n\r\n    const { amount } = activeChallenge;\r\n\r\n    let finalExperience = currentExperience + amount;\r\n\r\n    if (finalExperience >= experienceToNextLevel) {\r\n      finalExperience = finalExperience - experienceToNextLevel;\r\n      levelUp();\r\n    }\r\n\r\n    setCurrentExperience(finalExperience);\r\n    setActiveChallenge(null);\r\n    setChallengesCompleted(challengesCompleted + 1);\r\n  }\r\n\r\n  return (\r\n    <ChallengesContext.Provider\r\n      value={{\r\n        isDark,\r\n        level,\r\n        experienceToNextLevel,\r\n        currentExperience,\r\n        challengesCompleted,\r\n        startNewChallenge,\r\n        activeChallenge,\r\n        resetChallenge,\r\n        completeChallenge,\r\n        levelUp,\r\n        closeLevelUpModal,\r\n        SetDarkTheme,\r\n      }}\r\n    >\r\n      {children}\r\n      {isLevelUpModalOpen && <LevelUpModal />}\r\n    </ChallengesContext.Provider>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}