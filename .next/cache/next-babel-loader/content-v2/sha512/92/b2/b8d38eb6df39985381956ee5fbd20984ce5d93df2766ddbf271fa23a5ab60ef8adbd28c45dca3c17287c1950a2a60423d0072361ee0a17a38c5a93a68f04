{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\Desktop\\\\Solve\\\\TREINAMENTOS\\\\NLW\\\\#4\\\\moveit-next\\\\src\\\\contexts\\\\GlobalProvider.tsx\";\nimport { ChallengesProvider } from \"../contexts/ChallengeContexts\";\nimport { UserProvider } from \"../contexts/LoginContexts\";\nexport default function GlobalProvider(props) {\n  console.log(props);\n  return /*#__PURE__*/_jsxDEV(ChallengesProvider, {\n    level: props.level,\n    currentExperience: props.currentExperience,\n    challengesCompleted: props.challengesCompleted,\n    children: /*#__PURE__*/_jsxDEV(UserProvider, {\n      children: props.children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 11\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 9\n  }, this);\n}\nexport const getServerSideProps = async ctx => {\n  const {\n    level,\n    currentExperience,\n    challengesCompleted\n  } = ctx.req.cookies;\n  return {\n    props: {\n      level: Number(level),\n      currentExperience: Number(currentExperience),\n      challengesCompleted: Number(challengesCompleted)\n    }\n  };\n};","map":{"version":3,"sources":["D:/Desktop/Solve/TREINAMENTOS/NLW/#4/moveit-next/src/contexts/GlobalProvider.tsx"],"names":["ChallengesProvider","UserProvider","GlobalProvider","props","console","log","level","currentExperience","challengesCompleted","children","getServerSideProps","ctx","req","cookies","Number"],"mappings":";;AAEA,SAASA,kBAAT,QAAmC,+BAAnC;AACA,SAASC,YAAT,QAA6B,2BAA7B;AAEA,eAAe,SAASC,cAAT,CAAwBC,KAAxB,EAA+B;AAC1CC,EAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACA,sBACI,QAAC,kBAAD;AACE,IAAA,KAAK,EAAEA,KAAK,CAACG,KADf;AAEE,IAAA,iBAAiB,EAAEH,KAAK,CAACI,iBAF3B;AAGE,IAAA,mBAAmB,EAAEJ,KAAK,CAACK,mBAH7B;AAAA,2BAKE,QAAC,YAAD;AAAA,gBAAeL,KAAK,CAACM;AAArB;AAAA;AAAA;AAAA;AAAA;AALF;AAAA;AAAA;AAAA;AAAA,UADJ;AASD;AAED,OAAO,MAAMC,kBAAsC,GAAG,MAAOC,GAAP,IAAe;AACnE,QAAM;AAAEL,IAAAA,KAAF;AAASC,IAAAA,iBAAT;AAA4BC,IAAAA;AAA5B,MAAoDG,GAAG,CAACC,GAAJ,CAAQC,OAAlE;AACA,SAAO;AACLV,IAAAA,KAAK,EAAE;AACLG,MAAAA,KAAK,EAAEQ,MAAM,CAACR,KAAD,CADR;AAELC,MAAAA,iBAAiB,EAAEO,MAAM,CAACP,iBAAD,CAFpB;AAGLC,MAAAA,mBAAmB,EAAEM,MAAM,CAACN,mBAAD;AAHtB;AADF,GAAP;AAOD,CATM","sourcesContent":["import { GetServerSideProps } from \"next\";\r\n\r\nimport { ChallengesProvider } from \"../contexts/ChallengeContexts\";\r\nimport { UserProvider } from \"../contexts/LoginContexts\";\r\n\r\nexport default function GlobalProvider(props) {\r\n    console.log(props)\r\n    return (\r\n        <ChallengesProvider\r\n          level={props.level}\r\n          currentExperience={props.currentExperience}\r\n          challengesCompleted={props.challengesCompleted}\r\n        >\r\n          <UserProvider>{props.children}</UserProvider>\r\n        </ChallengesProvider>\r\n    );\r\n  }\r\n\r\n  export const getServerSideProps: GetServerSideProps = async (ctx) => {\r\n    const { level, currentExperience, challengesCompleted } = ctx.req.cookies;\r\n    return {\r\n      props: {\r\n        level: Number(level),\r\n        currentExperience: Number(currentExperience),\r\n        challengesCompleted: Number(challengesCompleted),\r\n      },\r\n    };\r\n  };\r\n  "]},"metadata":{},"sourceType":"module"}