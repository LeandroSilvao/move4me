{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\Desktop\\\\Solve\\\\TREINAMENTOS\\\\NLW\\\\#4\\\\moveit-next\\\\src\\\\components\\\\ExperienceBar.tsx\";\nimport Cookies from \"js-cookie\";\nimport { useContext } from \"react\";\nimport { ChallengesContext } from \"../contexts/ChallengeContexts\";\nimport styles from \"../styles/components/ExperienceBar.module.css\";\nexport default function ExperienceBar() {\n  const {\n    currentExperience,\n    experienceToNextLevel,\n    isDark\n  } = useContext(ChallengesContext);\n  const percentToNextLevel = Math.round(parseInt(Cookies.get('currentExperience')) * 100 / experienceToNextLevel); // const percentToNextLevel = Math.round(currentExperience * 100 / experienceToNextLevel ) \n\n  console.log(percentToNextLevel);\n  return /*#__PURE__*/_jsxDEV(\"header\", {\n    className: isDark ? `${styles.experienceBar} ${styles.darkTheme}` : `${styles.experienceBar}`,\n    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n      children: \"0 xp\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          width: `${percentToNextLevel}%`\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: styles.currentExperience,\n        style: {\n          left: `${percentToNextLevel}%`\n        },\n        children: [currentExperience, \" xp\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      children: [experienceToNextLevel, \" xp\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this);\n}","map":{"version":3,"sources":["D:/Desktop/Solve/TREINAMENTOS/NLW/#4/moveit-next/src/components/ExperienceBar.tsx"],"names":["Cookies","useContext","ChallengesContext","styles","ExperienceBar","currentExperience","experienceToNextLevel","isDark","percentToNextLevel","Math","round","parseInt","get","console","log","experienceBar","darkTheme","width","left"],"mappings":";;AAAA,OAAOA,OAAP,MAAoB,WAApB;AACA,SAASC,UAAT,QAA2B,OAA3B;AACA,SAASC,iBAAT,QAAkC,+BAAlC;AACA,OAAOC,MAAP,MAAmB,+CAAnB;AAEA,eAAe,SAASC,aAAT,GAAyB;AACtC,QAAM;AAAEC,IAAAA,iBAAF;AAAqBC,IAAAA,qBAArB;AAA4CC,IAAAA;AAA5C,MAAuDN,UAAU,CACrEC,iBADqE,CAAvE;AAGA,QAAMM,kBAAkB,GAAGC,IAAI,CAACC,KAAL,CAAWC,QAAQ,CAACX,OAAO,CAACY,GAAR,CAAY,mBAAZ,CAAD,CAAR,GAA6C,GAA7C,GAAmDN,qBAA9D,CAA3B,CAJsC,CAKtC;;AACAO,EAAAA,OAAO,CAACC,GAAR,CAAYN,kBAAZ;AAEA,sBACE;AAAQ,IAAA,SAAS,EAAED,MAAM,GAAI,GAAEJ,MAAM,CAACY,aAAc,IAAGZ,MAAM,CAACa,SAAU,EAA/C,GAAoD,GAAEb,MAAM,CAACY,aAAc,EAApG;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAA,8BACE;AAAK,QAAA,KAAK,EAAE;AAAEE,UAAAA,KAAK,EAAG,GAAET,kBAAmB;AAA/B;AAAZ;AAAA;AAAA;AAAA;AAAA,cADF,eAGE;AAAM,QAAA,SAAS,EAAEL,MAAM,CAACE,iBAAxB;AAA2C,QAAA,KAAK,EAAE;AAAEa,UAAAA,IAAI,EAAG,GAAEV,kBAAmB;AAA9B,SAAlD;AAAA,mBACGH,iBADH;AAAA;AAAA;AAAA;AAAA;AAAA,cAHF;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,eASE;AAAA,iBAAOC,qBAAP;AAAA;AAAA;AAAA;AAAA;AAAA,YATF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAaD","sourcesContent":["import Cookies from \"js-cookie\";\r\nimport { useContext } from \"react\";\r\nimport { ChallengesContext } from \"../contexts/ChallengeContexts\";\r\nimport styles from \"../styles/components/ExperienceBar.module.css\";\r\n\r\nexport default function ExperienceBar() {\r\n  const { currentExperience, experienceToNextLevel, isDark } = useContext(\r\n    ChallengesContext\r\n  );\r\n  const percentToNextLevel = Math.round(parseInt(Cookies.get('currentExperience')) * 100 / experienceToNextLevel ) \r\n  // const percentToNextLevel = Math.round(currentExperience * 100 / experienceToNextLevel ) \r\n  console.log(percentToNextLevel)\r\n\r\n  return (\r\n    <header className={isDark ? `${styles.experienceBar} ${styles.darkTheme}` : `${styles.experienceBar}`}>\r\n      <span>0 xp</span>\r\n      <div>\r\n        <div style={{ width: `${percentToNextLevel}%` }} />\r\n        {/* <div style={{ width: `${percentToNextLevel}%` }} /> */}\r\n        <span className={styles.currentExperience} style={{ left: `${percentToNextLevel}%` }}>\r\n          {currentExperience} xp\r\n        </span>\r\n      </div>\r\n      <span>{experienceToNextLevel} xp</span>\r\n    </header>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}