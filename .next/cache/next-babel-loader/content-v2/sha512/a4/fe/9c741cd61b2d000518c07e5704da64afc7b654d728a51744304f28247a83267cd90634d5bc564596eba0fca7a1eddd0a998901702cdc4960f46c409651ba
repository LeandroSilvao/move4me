{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"D:\\\\Desktop\\\\Solve\\\\TREINAMENTOS\\\\NLW\\\\#4\\\\moveit-next\\\\src\\\\contexts\\\\ChallengeContexts.tsx\",\n    _s = $RefreshSig$();\n\nimport { createContext, useState } from \"react\";\nexport var ChallengesContext = /*#__PURE__*/createContext({});\nexport function ChallengesProvider(_ref) {\n  _s();\n\n  var children = _ref.children;\n\n  var _useState = useState(1),\n      level = _useState[0],\n      setLevel = _useState[1];\n\n  var _useState2 = useState(0),\n      currentExperience = _useState2[0],\n      setCurrentExperience = _useState2[1];\n\n  var _useState3 = useState(0),\n      challengesCompleted = _useState3[0],\n      setChallengesCompleted = _useState3[1];\n\n  function startNewChallenge() {\n    console.log(\"New Challenge\");\n  }\n\n  return /*#__PURE__*/_jsxDEV(ChallengesContext.Provider, {\n    value: {\n      level: level,\n      currentExperience: currentExperience,\n      challengesCompleted: challengesCompleted,\n      startNewChallenge: startNewChallenge\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ChallengesProvider, \"lIgE7IFKF0067ZYEERnSVPjxmqw=\");\n\n_c = ChallengesProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"ChallengesProvider\");","map":{"version":3,"sources":["D:/Desktop/Solve/TREINAMENTOS/NLW/#4/moveit-next/src/contexts/ChallengeContexts.tsx"],"names":["createContext","useState","ChallengesContext","ChallengesProvider","children","level","setLevel","currentExperience","setCurrentExperience","challengesCompleted","setChallengesCompleted","startNewChallenge","console","log"],"mappings":";;;;;AACA,SAASA,aAAT,EAAmCC,QAAnC,QAAmD,OAAnD;AAcA,OAAO,IAAMC,iBAAiB,gBAAGF,aAAa,CAAC,EAAD,CAAvC;AAEP,OAAO,SAASG,kBAAT,OAAmE;AAAA;;AAAA,MAArCC,QAAqC,QAArCA,QAAqC;;AAAA,kBAC9CH,QAAQ,CAAC,CAAD,CADsC;AAAA,MACjEI,KADiE;AAAA,MAC1DC,QAD0D;;AAAA,mBAEtBL,QAAQ,CAAC,CAAD,CAFc;AAAA,MAEjEM,iBAFiE;AAAA,MAE9CC,oBAF8C;;AAAA,mBAGlBP,QAAQ,CAAC,CAAD,CAHU;AAAA,MAGjEQ,mBAHiE;AAAA,MAG5CC,sBAH4C;;AAKxE,WAASC,iBAAT,GAA6B;AAC3BC,IAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ;AACD;;AAED,sBACE,QAAC,iBAAD,CAAmB,QAAnB;AACE,IAAA,KAAK,EAAE;AACLR,MAAAA,KAAK,EAALA,KADK;AAELE,MAAAA,iBAAiB,EAAjBA,iBAFK;AAGLE,MAAAA,mBAAmB,EAAnBA,mBAHK;AAILE,MAAAA,iBAAiB,EAAjBA;AAJK,KADT;AAAA,cAQGP;AARH;AAAA;AAAA;AAAA;AAAA,UADF;AAYD;;GArBeD,kB;;KAAAA,kB","sourcesContent":["import { create } from \"domain\";\r\nimport { createContext, ReactNode, useState } from \"react\";\r\n\r\n\r\ninterface ChallengeContextData {\r\n    level: number;\r\n    currentExperience: number;\r\n    challengesCompleted: number;\r\n    startNewChallenge: () => void;\r\n}\r\n\r\ninterface ChallengesProviderProps {\r\n    children: ReactNode;\r\n}\r\n\r\nexport const ChallengesContext = createContext({} as ChallengeContextData);\r\n\r\nexport function ChallengesProvider({ children }: ChallengesProviderProps) {\r\n  const [level, setLevel] = useState(1);\r\n  const [currentExperience, setCurrentExperience] = useState(0);\r\n  const [challengesCompleted, setChallengesCompleted] = useState(0);\r\n\r\n  function startNewChallenge() {\r\n    console.log(\"New Challenge\");\r\n  }\r\n\r\n  return (\r\n    <ChallengesContext.Provider\r\n      value={{\r\n        level,\r\n        currentExperience,\r\n        challengesCompleted,\r\n        startNewChallenge,\r\n      }}\r\n    >\r\n      {children}\r\n    </ChallengesContext.Provider>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}