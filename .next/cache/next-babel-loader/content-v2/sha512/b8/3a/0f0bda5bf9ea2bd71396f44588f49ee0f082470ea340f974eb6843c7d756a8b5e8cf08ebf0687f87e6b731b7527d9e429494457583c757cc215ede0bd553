{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport Styles from \"../styles/components/CountDown.module.css\";\nimport { AiFillCheckCircle } from \"react-icons/ai\";\nimport { useContext } from \"react\";\nimport { CountdownContext } from \"../contexts/CountdownContexts\";\nimport { ChallengesContext } from \"../contexts/ChallengeContexts\";\nexport default function CountDown() {\n  const {\n    hasFinished,\n    isActive,\n    minutes,\n    seconds,\n    resetCountdown,\n    startCountdown\n  } = useContext(CountdownContext);\n  const {\n    isDark\n  } = useContext(ChallengesContext);\n  const [minuteLeft, minuteRight] = String(minutes).padStart(2, \"0\").split(\"\");\n  const [secondLeft, secondRight] = String(seconds).padStart(2, \"0\").split(\"\");\n  return /*#__PURE__*/_jsxs(\"div\", {\n    children: [/*#__PURE__*/_jsxs(\"div\", {\n      className: isDark ? `${Styles.CountDownContainer} ${Styles.darkTheme}` : `${Styles.CountDownContainer}`,\n      children: [/*#__PURE__*/_jsxs(\"div\", {\n        children: [/*#__PURE__*/_jsx(\"span\", {\n          children: minuteLeft\n        }), /*#__PURE__*/_jsx(\"span\", {\n          children: minuteRight\n        })]\n      }), /*#__PURE__*/_jsx(\"span\", {\n        children: \":\"\n      }), /*#__PURE__*/_jsxs(\"div\", {\n        children: [/*#__PURE__*/_jsx(\"span\", {\n          children: secondLeft\n        }), /*#__PURE__*/_jsx(\"span\", {\n          children: secondRight\n        })]\n      })]\n    }), hasFinished ? /*#__PURE__*/_jsxs(\"button\", {\n      disabled: true,\n      className: Styles.CountdownButton,\n      children: [\"Ciclo Encerrado\", /*#__PURE__*/_jsx(AiFillCheckCircle, {})]\n    }) : isActive ? /*#__PURE__*/_jsx(\"button\", {\n      type: \"button\",\n      className: isDark ? `${Styles.CountdownButton} ${Styles.CountdownButtonAcative} ${Styles.CountdownButtonAcativeDarkTheme}` : `${Styles.CountdownButton} ${Styles.CountdownButtonAcative}`,\n      onClick: resetCountdown,\n      children: \"Abandonar Ciclo\"\n    }) : /*#__PURE__*/_jsx(\"button\", {\n      type: \"button\",\n      className: isDark ? `${Styles.CountdownButton} ${Styles.CountdownButtonDarkTheme}` : `${Styles.CountdownButton}`,\n      onClick: startCountdown,\n      children: \"In\\xEDciar um ciclo\"\n    })]\n  });\n}","map":null,"metadata":{},"sourceType":"module"}