{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\Desktop\\\\Solve\\\\TREINAMENTOS\\\\NLW\\\\#4\\\\moveit-next\\\\src\\\\contexts\\\\LoginContexts.tsx\";\nimport { createContext, useState } from \"react\";\nimport { useRouter } from 'next/router';\nimport axios from \"axios\";\nimport Cookies from \"js-cookie\";\nexport const UserContext = /*#__PURE__*/createContext({});\nexport const UserProvider = props => {\n  const {\n    0: username,\n    1: setUsername\n  } = useState(\"\");\n  const {\n    0: password,\n    1: setPassword\n  } = useState(\"\");\n  const {\n    0: fullName,\n    1: setFullName\n  } = useState(\"\");\n  const {\n    0: urlProfilePicture,\n    1: setUrlProfilePicture\n  } = useState(\"\");\n  const {\n    0: authenticated,\n    1: setAuthenticated\n  } = useState(false);\n  const {\n    0: googleAuthenticated,\n    1: setGoogleAuthenticated\n  } = useState(false);\n  const {\n    0: accessToken,\n    1: setAccessToken\n  } = useState('');\n  const router = useRouter();\n\n  function ClearUserInfo() {\n    setUsername('');\n    setPassword('');\n    setFullName('');\n    setUrlProfilePicture('');\n    setAuthenticated(false);\n    setGoogleAuthenticated(false);\n    setAccessToken('');\n    Cookies.set('accessToken', '');\n  }\n\n  function setUser(e) {\n    const username = e.target.value;\n    setUsername(username);\n  }\n\n  function setUserPassword(e) {\n    const password = e.target.value;\n    setPassword(password);\n  }\n\n  function SignIn() {\n    axios.post(`/api/auth?grant_type=password&username=${username}&password=${password}`).then(res => {\n      if (res.data.access_token) {\n        setAccessToken(res.data.access_token);\n        setAuthenticated(true);\n        axios.get(`https://gitlab.com/api/v4/users?username=${username}`).then(res => {\n          setFullName(res.data[0].name);\n          const urlProfilePicture = res.data[0].avatar_url.replace('10.10.1.35', '177.84.246.126:9955');\n          setUrlProfilePicture(urlProfilePicture);\n        });\n        router.push('/home');\n      }\n    }).catch(err => console.log(err));\n  }\n\n  function SearchUserDetails(token) {\n    axios.get(`https://www.googleapis.com/oauth2/v1/userinfo?alt=json&access_token=${token}`).then(res => {\n      const {\n        picture,\n        given_name\n      } = res.data;\n      setUsername(res.data.email.split(\"@\")[0]);\n      setUrlProfilePicture(picture);\n      setFullName(given_name);\n    });\n  }\n\n  function SignInGoogle({\n    accessToken\n  }) {\n    Cookies.set('accessToken', accessToken);\n    setAccessToken(accessToken);\n    setGoogleAuthenticated(true);\n    SearchUserDetails(accessToken);\n    router.push('/home');\n  }\n\n  function SignOut() {\n    ClearUserInfo();\n    router.push('/');\n  }\n\n  return /*#__PURE__*/_jsxDEV(UserContext.Provider, {\n    value: {\n      username,\n      setUser,\n      password,\n      setUserPassword,\n      fullName,\n      urlProfilePicture,\n      SignIn,\n      SignInGoogle,\n      SearchUserDetails,\n      SignOut,\n      ClearUserInfo\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 93,\n    columnNumber: 5\n  }, this);\n};","map":{"version":3,"sources":["D:/Desktop/Solve/TREINAMENTOS/NLW/#4/moveit-next/src/contexts/LoginContexts.tsx"],"names":["createContext","useState","useRouter","axios","Cookies","UserContext","UserProvider","props","username","setUsername","password","setPassword","fullName","setFullName","urlProfilePicture","setUrlProfilePicture","authenticated","setAuthenticated","googleAuthenticated","setGoogleAuthenticated","accessToken","setAccessToken","router","ClearUserInfo","set","setUser","e","target","value","setUserPassword","SignIn","post","then","res","data","access_token","get","name","avatar_url","replace","push","catch","err","console","log","SearchUserDetails","token","picture","given_name","email","split","SignInGoogle","SignOut","children"],"mappings":"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","sourcesContent":["import { createContext, ReactNode, useEffect, useState } from \"react\";\r\nimport { useRouter } from 'next/router'\r\nimport axios from \"axios\";\r\nimport Cookies from \"js-cookie\";\r\n\r\ninterface UserContextData {\r\n  username: string;\r\n  password: string;\r\n  fullName: string;\r\n  urlProfilePicture: string;\r\n  setUser: (e) => void;\r\n  setUserPassword: (e) => void;\r\n  SignIn: () => void;\r\n  SignInGoogle: (res) => void;\r\n  SignOut: () => void;\r\n  SearchUserDetails: (token) => void;\r\n  ClearUserInfo: () => void;\r\n}\r\nexport const UserContext = createContext({} as UserContextData);\r\n\r\nexport const UserProvider: React.FC = (props) => {\r\n  const [username, setUsername] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [fullName, setFullName] = useState(\"\");\r\n  const [urlProfilePicture, setUrlProfilePicture] = useState(\"\");\r\n  const [authenticated, setAuthenticated] = useState(false);\r\n  const [googleAuthenticated, setGoogleAuthenticated] = useState(false);\r\n  const [accessToken, setAccessToken] = useState('');\r\n  const router = useRouter()\r\n\r\n  function ClearUserInfo(){\r\n    setUsername('')\r\n    setPassword('')\r\n    setFullName('')\r\n    setUrlProfilePicture('')\r\n    setAuthenticated(false)\r\n    setGoogleAuthenticated(false)\r\n    setAccessToken('')\r\n    Cookies.set('accessToken', '')\r\n  }\r\n\r\n  function setUser(e) {\r\n    const username = e.target.value;\r\n    setUsername(username);\r\n  }\r\n  function setUserPassword(e) {\r\n    const password = e.target.value;\r\n    setPassword(password);\r\n  }\r\n  function SignIn() {\r\n    axios\r\n      .post(\r\n        `/api/auth?grant_type=password&username=${username}&password=${password}`\r\n      )\r\n      .then((res) => {\r\n        if (res.data.access_token) {\r\n          setAccessToken(res.data.access_token)\r\n          setAuthenticated(true);\r\n\r\n          axios.get(`https://gitlab.com/api/v4/users?username=${username}`)\r\n          .then(res => {\r\n            setFullName(res.data[0].name)\r\n            const urlProfilePicture = res.data[0].avatar_url.replace('10.10.1.35','177.84.246.126:9955')\r\n            setUrlProfilePicture(urlProfilePicture)\r\n          })\r\n          router.push('/home')\r\n        }\r\n      })\r\n      .catch((err) => console.log(err));\r\n  }\r\n  function SearchUserDetails(token){\r\n    axios.get(`https://www.googleapis.com/oauth2/v1/userinfo?alt=json&access_token=${token}`)\r\n    .then(res => {\r\n      const {picture, given_name} = res.data\r\n      setUsername(res.data.email.split(\"@\")[0])\r\n      setUrlProfilePicture(picture)\r\n      setFullName(given_name)\r\n    })\r\n  }\r\n  function SignInGoogle({accessToken}){\r\n      Cookies.set('accessToken', accessToken)\r\n      setAccessToken(accessToken)\r\n      setGoogleAuthenticated(true)\r\n      SearchUserDetails(accessToken)\r\n      router.push('/home')\r\n  }\r\n  function SignOut(){\r\n    ClearUserInfo()\r\n    router.push('/')\r\n  }\r\n\r\n  return (\r\n    <UserContext.Provider\r\n      value={{\r\n        username,\r\n        setUser,\r\n        password,\r\n        setUserPassword,\r\n        fullName,\r\n        urlProfilePicture,\r\n        SignIn,\r\n        SignInGoogle,\r\n        SearchUserDetails,\r\n        SignOut,\r\n        ClearUserInfo\r\n      }}\r\n    >\r\n      {props.children}\r\n    </UserContext.Provider>\r\n  );\r\n};\r\n"]},"metadata":{},"sourceType":"module"}