{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\Desktop\\\\Solve\\\\TREINAMENTOS\\\\NLW\\\\#4\\\\moveit-next\\\\src\\\\contexts\\\\GlobalProvider.tsx\";\nimport { ChallengesProvider } from \"../contexts/ChallengeContexts\";\nimport { UserProvider } from \"../contexts/LoginContexts\";\nexport default function GlobalProvider(props) {\n  return /*#__PURE__*/_jsxDEV(ChallengesProvider, {\n    children: /*#__PURE__*/_jsxDEV(UserProvider, {\n      children: props.children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 5\n  }, this);\n} // export const getServerSideProps: GetServerSideProps = async (ctx) => {\n// const { level, currentExperience, challengesCompleted } = ctx.req.cookies;\n// return {\n//   props: {\n//     level: Number(level),\n//     currentExperience: Number(currentExperience),\n//     challengesCompleted: Number(challengesCompleted),\n//   },\n// };\n// };","map":{"version":3,"sources":["D:/Desktop/Solve/TREINAMENTOS/NLW/#4/moveit-next/src/contexts/GlobalProvider.tsx"],"names":["ChallengesProvider","UserProvider","GlobalProvider","props","children"],"mappings":";;AAIA,SACEA,kBADF,QAEO,+BAFP;AAGA,SAASC,YAAT,QAA6B,2BAA7B;AAEA,eAAe,SAASC,cAAT,CAAwBC,KAAxB,EAA+B;AAG5C,sBACE,QAAC,kBAAD;AAAA,2BACE,QAAC,YAAD;AAAA,gBAAeA,KAAK,CAACC;AAArB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAKD,C,CAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import { GetServerSideProps } from \"next\";\r\nimport { useEffect, useState } from \"react\";\r\nimport Cookies from \"js-cookie\";\r\n\r\nimport {\r\n  ChallengesProvider,\r\n} from \"../contexts/ChallengeContexts\";\r\nimport { UserProvider } from \"../contexts/LoginContexts\";\r\n\r\nexport default function GlobalProvider(props) {\r\n\r\n\r\n  return (\r\n    <ChallengesProvider>\r\n      <UserProvider>{props.children}</UserProvider>\r\n    </ChallengesProvider>\r\n  );\r\n}\r\n\r\n// export const getServerSideProps: GetServerSideProps = async (ctx) => {\r\n// const { level, currentExperience, challengesCompleted } = ctx.req.cookies;\r\n// return {\r\n//   props: {\r\n//     level: Number(level),\r\n//     currentExperience: Number(currentExperience),\r\n//     challengesCompleted: Number(challengesCompleted),\r\n//   },\r\n// };\r\n// };\r\n"]},"metadata":{},"sourceType":"module"}