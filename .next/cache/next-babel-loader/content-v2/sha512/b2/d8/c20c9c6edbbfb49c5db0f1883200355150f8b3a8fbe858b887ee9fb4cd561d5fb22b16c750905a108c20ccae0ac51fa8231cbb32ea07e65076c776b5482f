{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"D:\\\\Desktop\\\\Solve\\\\TREINAMENTOS\\\\NLW\\\\#4\\\\moveit-next\\\\src\\\\contexts\\\\ChallengeContexts.tsx\",\n    _s = $RefreshSig$();\n\nimport { createContext, useEffect, useState } from \"react\";\nimport challenges from \"../../challenges.json\";\nexport var ChallengesContext = /*#__PURE__*/createContext({});\nexport function ChallengesProvider(_ref) {\n  _s();\n\n  var children = _ref.children;\n\n  var _useState = useState(1),\n      level = _useState[0],\n      setLevel = _useState[1];\n\n  var _useState2 = useState(0),\n      currentExperience = _useState2[0],\n      setCurrentExperience = _useState2[1];\n\n  var _useState3 = useState(0),\n      challengesCompleted = _useState3[0],\n      setChallengesCompleted = _useState3[1];\n\n  var _useState4 = useState(null),\n      activeChallenge = _useState4[0],\n      setActiveChallenge = _useState4[1];\n\n  var experienceToNextLevel = Math.pow((level + 1) * 4, 2);\n  useEffect(function () {// Notification.requestPermission()\n  }, []);\n\n  function startNewChallenge() {\n    var randomChallengIndex = Math.floor(Math.random() * challenges.length);\n    var challenge = challenges[randomChallengIndex];\n    setActiveChallenge(challenge);\n    new Audio('/notification.mp3').play();\n\n    if (Notification.permission === 'granted') {\n      console.log(Notification.permission);\n      new Notification('Novo desafio', {\n        body: \"Valendo: \".concat(challenge.amount, \"xp!\")\n      });\n    }\n  }\n\n  function resetChallenge() {\n    setActiveChallenge(null);\n  }\n\n  function completeChallenge() {\n    if (!activeChallenge) return;\n    var amount = activeChallenge.amount;\n    var finalExperience = currentExperience + amount;\n\n    if (finalExperience >= experienceToNextLevel) {\n      finalExperience = finalExperience - experienceToNextLevel;\n      setLevel(level + 1);\n    }\n\n    setCurrentExperience(finalExperience);\n    setActiveChallenge(null);\n    setChallengesCompleted(challengesCompleted + 1);\n  }\n\n  return /*#__PURE__*/_jsxDEV(ChallengesContext.Provider, {\n    value: {\n      level: level,\n      experienceToNextLevel: experienceToNextLevel,\n      currentExperience: currentExperience,\n      challengesCompleted: challengesCompleted,\n      startNewChallenge: startNewChallenge,\n      activeChallenge: activeChallenge,\n      resetChallenge: resetChallenge,\n      completeChallenge: completeChallenge\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ChallengesProvider, \"mXQLPpEuqfijIicM0DJuMSLmJHY=\");\n\n_c = ChallengesProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"ChallengesProvider\");","map":{"version":3,"sources":["D:/Desktop/Solve/TREINAMENTOS/NLW/#4/moveit-next/src/contexts/ChallengeContexts.tsx"],"names":["createContext","useEffect","useState","challenges","ChallengesContext","ChallengesProvider","children","level","setLevel","currentExperience","setCurrentExperience","challengesCompleted","setChallengesCompleted","activeChallenge","setActiveChallenge","experienceToNextLevel","Math","pow","startNewChallenge","randomChallengIndex","floor","random","length","challenge","Audio","play","Notification","permission","console","log","body","amount","resetChallenge","completeChallenge","finalExperience"],"mappings":";;;;;AAAA,SAASA,aAAT,EAAmCC,SAAnC,EAA8CC,QAA9C,QAA8D,OAA9D;AACA,OAAOC,UAAP,MAAuB,uBAAvB;AAuBA,OAAO,IAAMC,iBAAiB,gBAAGJ,aAAa,CAAC,EAAD,CAAvC;AAEP,OAAO,SAASK,kBAAT,OAAmE;AAAA;;AAAA,MAArCC,QAAqC,QAArCA,QAAqC;;AAAA,kBAE9CJ,QAAQ,CAAC,CAAD,CAFsC;AAAA,MAEjEK,KAFiE;AAAA,MAE1DC,QAF0D;;AAAA,mBAGtBN,QAAQ,CAAC,CAAD,CAHc;AAAA,MAGjEO,iBAHiE;AAAA,MAG9CC,oBAH8C;;AAAA,mBAIlBR,QAAQ,CAAC,CAAD,CAJU;AAAA,MAIjES,mBAJiE;AAAA,MAI5CC,sBAJ4C;;AAAA,mBAK1BV,QAAQ,CAAC,IAAD,CALkB;AAAA,MAKjEW,eALiE;AAAA,MAKhDC,kBALgD;;AAMxE,MAAMC,qBAAqB,GAAGC,IAAI,CAACC,GAAL,CAAS,CAACV,KAAK,GAAG,CAAT,IAAc,CAAvB,EAA0B,CAA1B,CAA9B;AAEAN,EAAAA,SAAS,CAAC,YAAM,CACd;AACD,GAFQ,EAEN,EAFM,CAAT;;AAIA,WAASiB,iBAAT,GAA6B;AAC3B,QAAMC,mBAAmB,GAAGH,IAAI,CAACI,KAAL,CAAWJ,IAAI,CAACK,MAAL,KAAgBlB,UAAU,CAACmB,MAAtC,CAA5B;AACA,QAAMC,SAAS,GAAGpB,UAAU,CAACgB,mBAAD,CAA5B;AACAL,IAAAA,kBAAkB,CAACS,SAAD,CAAlB;AAEA,QAAIC,KAAJ,CAAU,mBAAV,EAA+BC,IAA/B;;AAEA,QAAGC,YAAY,CAACC,UAAb,KAA4B,SAA/B,EAAyC;AACvCC,MAAAA,OAAO,CAACC,GAAR,CAAYH,YAAY,CAACC,UAAzB;AACA,UAAID,YAAJ,CAAiB,cAAjB,EAAiC;AAC/BI,QAAAA,IAAI,qBAAcP,SAAS,CAACQ,MAAxB;AAD2B,OAAjC;AAID;AACF;;AAED,WAASC,cAAT,GAA0B;AACxBlB,IAAAA,kBAAkB,CAAC,IAAD,CAAlB;AACD;;AAED,WAASmB,iBAAT,GAA4B;AAC1B,QAAG,CAACpB,eAAJ,EAAqB;AADK,QAGlBkB,MAHkB,GAGPlB,eAHO,CAGlBkB,MAHkB;AAK1B,QAAIG,eAAe,GAAGzB,iBAAiB,GAAGsB,MAA1C;;AAEA,QAAGG,eAAe,IAAInB,qBAAtB,EAA4C;AAC1CmB,MAAAA,eAAe,GAAGA,eAAe,GAAGnB,qBAApC;AACAP,MAAAA,QAAQ,CAACD,KAAK,GAAG,CAAT,CAAR;AACD;;AAEDG,IAAAA,oBAAoB,CAACwB,eAAD,CAApB;AACApB,IAAAA,kBAAkB,CAAC,IAAD,CAAlB;AACAF,IAAAA,sBAAsB,CAACD,mBAAmB,GAAG,CAAvB,CAAtB;AACD;;AAED,sBACE,QAAC,iBAAD,CAAmB,QAAnB;AACE,IAAA,KAAK,EAAE;AACLJ,MAAAA,KAAK,EAALA,KADK;AAELQ,MAAAA,qBAAqB,EAArBA,qBAFK;AAGLN,MAAAA,iBAAiB,EAAjBA,iBAHK;AAILE,MAAAA,mBAAmB,EAAnBA,mBAJK;AAKLO,MAAAA,iBAAiB,EAAjBA,iBALK;AAMLL,MAAAA,eAAe,EAAfA,eANK;AAOLmB,MAAAA,cAAc,EAAdA,cAPK;AAQLC,MAAAA,iBAAiB,EAAjBA;AARK,KADT;AAAA,cAYG3B;AAZH;AAAA;AAAA;AAAA;AAAA,UADF;AAgBD;;GAjEeD,kB;;KAAAA,kB","sourcesContent":["import { createContext, ReactNode, useEffect, useState } from \"react\";\r\nimport challenges from \"../../challenges.json\";\r\n\r\ninterface Challenge {\r\n  type: \"body\" | \"eye\";\r\n  description: string;\r\n  amount: number;\r\n}\r\n\r\ninterface ChallengeContextData {\r\n  level: number;\r\n  experienceToNextLevel: number;\r\n  currentExperience: number;\r\n  challengesCompleted: number;\r\n  activeChallenge: Challenge;\r\n  startNewChallenge: () => void;\r\n  resetChallenge: () => void;\r\n  completeChallenge: () => void;\r\n}\r\n\r\ninterface ChallengesProviderProps {\r\n  children: ReactNode;\r\n}\r\n\r\nexport const ChallengesContext = createContext({} as ChallengeContextData);\r\n\r\nexport function ChallengesProvider({ children }: ChallengesProviderProps) {\r\n  \r\n  const [level, setLevel] = useState(1);\r\n  const [currentExperience, setCurrentExperience] = useState(0);\r\n  const [challengesCompleted, setChallengesCompleted] = useState(0);\r\n  const [activeChallenge, setActiveChallenge] = useState(null);\r\n  const experienceToNextLevel = Math.pow((level + 1) * 4, 2);\r\n\r\n  useEffect(() => {\r\n    // Notification.requestPermission()\r\n  }, [])\r\n\r\n  function startNewChallenge() {\r\n    const randomChallengIndex = Math.floor(Math.random() * challenges.length);\r\n    const challenge = challenges[randomChallengIndex];\r\n    setActiveChallenge(challenge);\r\n\r\n    new Audio('/notification.mp3').play()\r\n\r\n    if(Notification.permission === 'granted'){\r\n      console.log(Notification.permission)\r\n      new Notification('Novo desafio', {\r\n        body: `Valendo: ${challenge.amount}xp!`\r\n      })\r\n\r\n    }\r\n  }\r\n\r\n  function resetChallenge() {\r\n    setActiveChallenge(null);\r\n  }\r\n\r\n  function completeChallenge(){\r\n    if(!activeChallenge) return;\r\n\r\n    const { amount } = activeChallenge\r\n\r\n    let finalExperience = currentExperience + amount\r\n\r\n    if(finalExperience >= experienceToNextLevel){\r\n      finalExperience = finalExperience - experienceToNextLevel\r\n      setLevel(level + 1)\r\n    }\r\n\r\n    setCurrentExperience(finalExperience)\r\n    setActiveChallenge(null)\r\n    setChallengesCompleted(challengesCompleted + 1)\r\n  }\r\n\r\n  return (\r\n    <ChallengesContext.Provider\r\n      value={{\r\n        level,\r\n        experienceToNextLevel,\r\n        currentExperience,\r\n        challengesCompleted,\r\n        startNewChallenge,\r\n        activeChallenge,\r\n        resetChallenge,\r\n        completeChallenge\r\n      }}\r\n    >\r\n      {children}\r\n    </ChallengesContext.Provider>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}